WARNING: Logging before InitGoogleLogging() is written to STDERR
I1013 17:42:09.777822 15678 solver.cpp:48] Initializing solver from parameters: 
test_iter: 240
test_interval: 500
base_lr: 0.001
display: 100
max_iter: 100000
lr_policy: "inv"
gamma: 5e-05
power: 0.75
momentum: 0.9
weight_decay: 2e-05
stepsize: 10000
snapshot: 20000
snapshot_prefix: "models/21class_pascal_plus_pre_trained_alex_net/21class_pascal_plus_pre_trained_alex_net_lr_0.001"
solver_mode: GPU
net: "nets/21class_pascal_plus_pre_trained_alex_net/trainval.prototxt"
I1013 17:42:09.777928 15678 solver.cpp:91] Creating training net from net file: nets/21class_pascal_plus_pre_trained_alex_net/trainval.prototxt
I1013 17:42:09.778411 15678 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I1013 17:42:09.778431 15678 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I1013 17:42:09.778553 15678 net.cpp:58] Initializing net from parameters: 
name: "AlexNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
    mean_file: "data/person_only_lmdb/21class_mean.binaryproto"
  }
  data_param {
    source: "data/person_only_lmdb/pascal_plus_21cls_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6new"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7new"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8new"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 21
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
I1013 17:42:09.778625 15678 layer_factory.hpp:77] Creating layer mnist
I1013 17:42:09.779445 15678 net.cpp:100] Creating Layer mnist
I1013 17:42:09.779458 15678 net.cpp:408] mnist -> data
I1013 17:42:09.779472 15678 net.cpp:408] mnist -> label
I1013 17:42:09.779484 15678 data_transformer.cpp:25] Loading mean file from: data/person_only_lmdb/21class_mean.binaryproto
I1013 17:42:09.781463 15722 db_lmdb.cpp:35] Opened lmdb data/person_only_lmdb/pascal_plus_21cls_train_lmdb
I1013 17:42:09.806439 15678 data_layer.cpp:41] output data size: 128,3,128,128
I1013 17:42:09.860836 15678 net.cpp:150] Setting up mnist
I1013 17:42:09.860940 15678 net.cpp:157] Top shape: 128 3 128 128 (6291456)
I1013 17:42:09.860982 15678 net.cpp:157] Top shape: 128 (128)
I1013 17:42:09.860991 15678 net.cpp:165] Memory required for data: 25166336
I1013 17:42:09.860999 15678 layer_factory.hpp:77] Creating layer conv1
I1013 17:42:09.861033 15678 net.cpp:100] Creating Layer conv1
I1013 17:42:09.861043 15678 net.cpp:434] conv1 <- data
I1013 17:42:09.861063 15678 net.cpp:408] conv1 -> conv1
I1013 17:42:10.120687 15678 net.cpp:150] Setting up conv1
I1013 17:42:10.120718 15678 net.cpp:157] Top shape: 128 96 30 30 (11059200)
I1013 17:42:10.120721 15678 net.cpp:165] Memory required for data: 69403136
I1013 17:42:10.120740 15678 layer_factory.hpp:77] Creating layer relu1
I1013 17:42:10.120764 15678 net.cpp:100] Creating Layer relu1
I1013 17:42:10.120769 15678 net.cpp:434] relu1 <- conv1
I1013 17:42:10.120774 15678 net.cpp:395] relu1 -> conv1 (in-place)
I1013 17:42:10.120934 15678 net.cpp:150] Setting up relu1
I1013 17:42:10.120945 15678 net.cpp:157] Top shape: 128 96 30 30 (11059200)
I1013 17:42:10.120949 15678 net.cpp:165] Memory required for data: 113639936
I1013 17:42:10.120951 15678 layer_factory.hpp:77] Creating layer norm1
I1013 17:42:10.120960 15678 net.cpp:100] Creating Layer norm1
I1013 17:42:10.120964 15678 net.cpp:434] norm1 <- conv1
I1013 17:42:10.120968 15678 net.cpp:408] norm1 -> norm1
I1013 17:42:10.121443 15678 net.cpp:150] Setting up norm1
I1013 17:42:10.121456 15678 net.cpp:157] Top shape: 128 96 30 30 (11059200)
I1013 17:42:10.121459 15678 net.cpp:165] Memory required for data: 157876736
I1013 17:42:10.121462 15678 layer_factory.hpp:77] Creating layer pool1
I1013 17:42:10.121472 15678 net.cpp:100] Creating Layer pool1
I1013 17:42:10.121475 15678 net.cpp:434] pool1 <- norm1
I1013 17:42:10.121481 15678 net.cpp:408] pool1 -> pool1
I1013 17:42:10.121529 15678 net.cpp:150] Setting up pool1
I1013 17:42:10.121536 15678 net.cpp:157] Top shape: 128 96 15 15 (2764800)
I1013 17:42:10.121539 15678 net.cpp:165] Memory required for data: 168935936
I1013 17:42:10.121541 15678 layer_factory.hpp:77] Creating layer conv2
I1013 17:42:10.121556 15678 net.cpp:100] Creating Layer conv2
I1013 17:42:10.121561 15678 net.cpp:434] conv2 <- pool1
I1013 17:42:10.121565 15678 net.cpp:408] conv2 -> conv2
I1013 17:42:10.132073 15678 net.cpp:150] Setting up conv2
I1013 17:42:10.132087 15678 net.cpp:157] Top shape: 128 256 15 15 (7372800)
I1013 17:42:10.132091 15678 net.cpp:165] Memory required for data: 198427136
I1013 17:42:10.132099 15678 layer_factory.hpp:77] Creating layer relu2
I1013 17:42:10.132104 15678 net.cpp:100] Creating Layer relu2
I1013 17:42:10.132108 15678 net.cpp:434] relu2 <- conv2
I1013 17:42:10.132112 15678 net.cpp:395] relu2 -> conv2 (in-place)
I1013 17:42:10.132601 15678 net.cpp:150] Setting up relu2
I1013 17:42:10.132612 15678 net.cpp:157] Top shape: 128 256 15 15 (7372800)
I1013 17:42:10.132627 15678 net.cpp:165] Memory required for data: 227918336
I1013 17:42:10.132630 15678 layer_factory.hpp:77] Creating layer norm2
I1013 17:42:10.132637 15678 net.cpp:100] Creating Layer norm2
I1013 17:42:10.132640 15678 net.cpp:434] norm2 <- conv2
I1013 17:42:10.132645 15678 net.cpp:408] norm2 -> norm2
I1013 17:42:10.132850 15678 net.cpp:150] Setting up norm2
I1013 17:42:10.132861 15678 net.cpp:157] Top shape: 128 256 15 15 (7372800)
I1013 17:42:10.132864 15678 net.cpp:165] Memory required for data: 257409536
I1013 17:42:10.132868 15678 layer_factory.hpp:77] Creating layer pool2
I1013 17:42:10.132874 15678 net.cpp:100] Creating Layer pool2
I1013 17:42:10.132877 15678 net.cpp:434] pool2 <- norm2
I1013 17:42:10.132884 15678 net.cpp:408] pool2 -> pool2
I1013 17:42:10.132915 15678 net.cpp:150] Setting up pool2
I1013 17:42:10.132920 15678 net.cpp:157] Top shape: 128 256 7 7 (1605632)
I1013 17:42:10.132922 15678 net.cpp:165] Memory required for data: 263832064
I1013 17:42:10.132925 15678 layer_factory.hpp:77] Creating layer conv3
I1013 17:42:10.132936 15678 net.cpp:100] Creating Layer conv3
I1013 17:42:10.132939 15678 net.cpp:434] conv3 <- pool2
I1013 17:42:10.132944 15678 net.cpp:408] conv3 -> conv3
I1013 17:42:10.159142 15678 net.cpp:150] Setting up conv3
I1013 17:42:10.159155 15678 net.cpp:157] Top shape: 128 384 7 7 (2408448)
I1013 17:42:10.159159 15678 net.cpp:165] Memory required for data: 273465856
I1013 17:42:10.159168 15678 layer_factory.hpp:77] Creating layer relu3
I1013 17:42:10.159174 15678 net.cpp:100] Creating Layer relu3
I1013 17:42:10.159178 15678 net.cpp:434] relu3 <- conv3
I1013 17:42:10.159194 15678 net.cpp:395] relu3 -> conv3 (in-place)
I1013 17:42:10.159351 15678 net.cpp:150] Setting up relu3
I1013 17:42:10.159363 15678 net.cpp:157] Top shape: 128 384 7 7 (2408448)
I1013 17:42:10.159365 15678 net.cpp:165] Memory required for data: 283099648
I1013 17:42:10.159368 15678 layer_factory.hpp:77] Creating layer conv4
I1013 17:42:10.159379 15678 net.cpp:100] Creating Layer conv4
I1013 17:42:10.159385 15678 net.cpp:434] conv4 <- conv3
I1013 17:42:10.159391 15678 net.cpp:408] conv4 -> conv4
I1013 17:42:10.180081 15678 net.cpp:150] Setting up conv4
I1013 17:42:10.180094 15678 net.cpp:157] Top shape: 128 384 7 7 (2408448)
I1013 17:42:10.180097 15678 net.cpp:165] Memory required for data: 292733440
I1013 17:42:10.180104 15678 layer_factory.hpp:77] Creating layer relu4
I1013 17:42:10.180109 15678 net.cpp:100] Creating Layer relu4
I1013 17:42:10.180112 15678 net.cpp:434] relu4 <- conv4
I1013 17:42:10.180116 15678 net.cpp:395] relu4 -> conv4 (in-place)
I1013 17:42:10.180296 15678 net.cpp:150] Setting up relu4
I1013 17:42:10.180306 15678 net.cpp:157] Top shape: 128 384 7 7 (2408448)
I1013 17:42:10.180310 15678 net.cpp:165] Memory required for data: 302367232
I1013 17:42:10.180313 15678 layer_factory.hpp:77] Creating layer conv5
I1013 17:42:10.180323 15678 net.cpp:100] Creating Layer conv5
I1013 17:42:10.180326 15678 net.cpp:434] conv5 <- conv4
I1013 17:42:10.180333 15678 net.cpp:408] conv5 -> conv5
I1013 17:42:10.195015 15678 net.cpp:150] Setting up conv5
I1013 17:42:10.195029 15678 net.cpp:157] Top shape: 128 256 7 7 (1605632)
I1013 17:42:10.195031 15678 net.cpp:165] Memory required for data: 308789760
I1013 17:42:10.195041 15678 layer_factory.hpp:77] Creating layer relu5
I1013 17:42:10.195047 15678 net.cpp:100] Creating Layer relu5
I1013 17:42:10.195050 15678 net.cpp:434] relu5 <- conv5
I1013 17:42:10.195055 15678 net.cpp:395] relu5 -> conv5 (in-place)
I1013 17:42:10.195231 15678 net.cpp:150] Setting up relu5
I1013 17:42:10.195243 15678 net.cpp:157] Top shape: 128 256 7 7 (1605632)
I1013 17:42:10.195246 15678 net.cpp:165] Memory required for data: 315212288
I1013 17:42:10.195250 15678 layer_factory.hpp:77] Creating layer pool5
I1013 17:42:10.195255 15678 net.cpp:100] Creating Layer pool5
I1013 17:42:10.195257 15678 net.cpp:434] pool5 <- conv5
I1013 17:42:10.195262 15678 net.cpp:408] pool5 -> pool5
I1013 17:42:10.195303 15678 net.cpp:150] Setting up pool5
I1013 17:42:10.195312 15678 net.cpp:157] Top shape: 128 256 3 3 (294912)
I1013 17:42:10.195313 15678 net.cpp:165] Memory required for data: 316391936
I1013 17:42:10.195317 15678 layer_factory.hpp:77] Creating layer fc6new
I1013 17:42:10.195327 15678 net.cpp:100] Creating Layer fc6new
I1013 17:42:10.195330 15678 net.cpp:434] fc6new <- pool5
I1013 17:42:10.195336 15678 net.cpp:408] fc6new -> fc6
I1013 17:42:10.469427 15678 net.cpp:150] Setting up fc6new
I1013 17:42:10.469458 15678 net.cpp:157] Top shape: 128 4096 (524288)
I1013 17:42:10.469461 15678 net.cpp:165] Memory required for data: 318489088
I1013 17:42:10.469471 15678 layer_factory.hpp:77] Creating layer relu6
I1013 17:42:10.469481 15678 net.cpp:100] Creating Layer relu6
I1013 17:42:10.469485 15678 net.cpp:434] relu6 <- fc6
I1013 17:42:10.469493 15678 net.cpp:395] relu6 -> fc6 (in-place)
I1013 17:42:10.470042 15678 net.cpp:150] Setting up relu6
I1013 17:42:10.470068 15678 net.cpp:157] Top shape: 128 4096 (524288)
I1013 17:42:10.470072 15678 net.cpp:165] Memory required for data: 320586240
I1013 17:42:10.470074 15678 layer_factory.hpp:77] Creating layer drop6
I1013 17:42:10.470087 15678 net.cpp:100] Creating Layer drop6
I1013 17:42:10.470089 15678 net.cpp:434] drop6 <- fc6
I1013 17:42:10.470095 15678 net.cpp:395] drop6 -> fc6 (in-place)
I1013 17:42:10.470119 15678 net.cpp:150] Setting up drop6
I1013 17:42:10.470127 15678 net.cpp:157] Top shape: 128 4096 (524288)
I1013 17:42:10.470130 15678 net.cpp:165] Memory required for data: 322683392
I1013 17:42:10.470134 15678 layer_factory.hpp:77] Creating layer fc7new
I1013 17:42:10.470141 15678 net.cpp:100] Creating Layer fc7new
I1013 17:42:10.470144 15678 net.cpp:434] fc7new <- fc6
I1013 17:42:10.470154 15678 net.cpp:408] fc7new -> fc7
I1013 17:42:10.954840 15678 net.cpp:150] Setting up fc7new
I1013 17:42:10.954876 15678 net.cpp:157] Top shape: 128 4096 (524288)
I1013 17:42:10.954880 15678 net.cpp:165] Memory required for data: 324780544
I1013 17:42:10.954890 15678 layer_factory.hpp:77] Creating layer relu7
I1013 17:42:10.954902 15678 net.cpp:100] Creating Layer relu7
I1013 17:42:10.954907 15678 net.cpp:434] relu7 <- fc7
I1013 17:42:10.954912 15678 net.cpp:395] relu7 -> fc7 (in-place)
I1013 17:42:10.955147 15678 net.cpp:150] Setting up relu7
I1013 17:42:10.955157 15678 net.cpp:157] Top shape: 128 4096 (524288)
I1013 17:42:10.955160 15678 net.cpp:165] Memory required for data: 326877696
I1013 17:42:10.955164 15678 layer_factory.hpp:77] Creating layer drop7
I1013 17:42:10.955173 15678 net.cpp:100] Creating Layer drop7
I1013 17:42:10.955176 15678 net.cpp:434] drop7 <- fc7
I1013 17:42:10.955180 15678 net.cpp:395] drop7 -> fc7 (in-place)
I1013 17:42:10.955199 15678 net.cpp:150] Setting up drop7
I1013 17:42:10.955204 15678 net.cpp:157] Top shape: 128 4096 (524288)
I1013 17:42:10.955206 15678 net.cpp:165] Memory required for data: 328974848
I1013 17:42:10.955209 15678 layer_factory.hpp:77] Creating layer fc8new
I1013 17:42:10.955220 15678 net.cpp:100] Creating Layer fc8new
I1013 17:42:10.955224 15678 net.cpp:434] fc8new <- fc7
I1013 17:42:10.955229 15678 net.cpp:408] fc8new -> fc8
I1013 17:42:10.957715 15678 net.cpp:150] Setting up fc8new
I1013 17:42:10.957725 15678 net.cpp:157] Top shape: 128 21 (2688)
I1013 17:42:10.957727 15678 net.cpp:165] Memory required for data: 328985600
I1013 17:42:10.957732 15678 layer_factory.hpp:77] Creating layer loss
I1013 17:42:10.957742 15678 net.cpp:100] Creating Layer loss
I1013 17:42:10.957746 15678 net.cpp:434] loss <- fc8
I1013 17:42:10.957749 15678 net.cpp:434] loss <- label
I1013 17:42:10.957752 15678 net.cpp:408] loss -> loss
I1013 17:42:10.957777 15678 layer_factory.hpp:77] Creating layer loss
I1013 17:42:10.958025 15678 net.cpp:150] Setting up loss
I1013 17:42:10.958036 15678 net.cpp:157] Top shape: (1)
I1013 17:42:10.958039 15678 net.cpp:160]     with loss weight 1
I1013 17:42:10.958055 15678 net.cpp:165] Memory required for data: 328985604
I1013 17:42:10.958058 15678 net.cpp:226] loss needs backward computation.
I1013 17:42:10.958062 15678 net.cpp:226] fc8new needs backward computation.
I1013 17:42:10.958065 15678 net.cpp:226] drop7 needs backward computation.
I1013 17:42:10.958067 15678 net.cpp:226] relu7 needs backward computation.
I1013 17:42:10.958070 15678 net.cpp:226] fc7new needs backward computation.
I1013 17:42:10.958072 15678 net.cpp:226] drop6 needs backward computation.
I1013 17:42:10.958076 15678 net.cpp:226] relu6 needs backward computation.
I1013 17:42:10.958077 15678 net.cpp:226] fc6new needs backward computation.
I1013 17:42:10.958081 15678 net.cpp:226] pool5 needs backward computation.
I1013 17:42:10.958083 15678 net.cpp:226] relu5 needs backward computation.
I1013 17:42:10.958086 15678 net.cpp:226] conv5 needs backward computation.
I1013 17:42:10.958089 15678 net.cpp:226] relu4 needs backward computation.
I1013 17:42:10.958092 15678 net.cpp:226] conv4 needs backward computation.
I1013 17:42:10.958096 15678 net.cpp:226] relu3 needs backward computation.
I1013 17:42:10.958098 15678 net.cpp:226] conv3 needs backward computation.
I1013 17:42:10.958101 15678 net.cpp:226] pool2 needs backward computation.
I1013 17:42:10.958104 15678 net.cpp:226] norm2 needs backward computation.
I1013 17:42:10.958107 15678 net.cpp:226] relu2 needs backward computation.
I1013 17:42:10.958109 15678 net.cpp:226] conv2 needs backward computation.
I1013 17:42:10.958112 15678 net.cpp:226] pool1 needs backward computation.
I1013 17:42:10.958115 15678 net.cpp:226] norm1 needs backward computation.
I1013 17:42:10.958118 15678 net.cpp:226] relu1 needs backward computation.
I1013 17:42:10.958122 15678 net.cpp:226] conv1 needs backward computation.
I1013 17:42:10.958124 15678 net.cpp:228] mnist does not need backward computation.
I1013 17:42:10.958127 15678 net.cpp:270] This network produces output loss
I1013 17:42:10.958140 15678 net.cpp:283] Network initialization done.
I1013 17:42:10.958668 15678 solver.cpp:181] Creating test net (#0) specified by net file: nets/21class_pascal_plus_pre_trained_alex_net/trainval.prototxt
I1013 17:42:10.958724 15678 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I1013 17:42:10.958876 15678 net.cpp:58] Initializing net from parameters: 
name: "AlexNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
    mean_file: "data/person_only_lmdb/21class_mean.binaryproto"
  }
  data_param {
    source: "data/person_only_lmdb/pascal_plus_21cls_train_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6new"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7new"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8new"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 21
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
I1013 17:42:10.958974 15678 layer_factory.hpp:77] Creating layer mnist
I1013 17:42:10.959040 15678 net.cpp:100] Creating Layer mnist
I1013 17:42:10.959045 15678 net.cpp:408] mnist -> data
I1013 17:42:10.959053 15678 net.cpp:408] mnist -> label
I1013 17:42:10.959060 15678 data_transformer.cpp:25] Loading mean file from: data/person_only_lmdb/21class_mean.binaryproto
